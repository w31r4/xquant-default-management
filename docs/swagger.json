{
    "swagger": "2.0",
    "info": {
        "description": "This is a sample server celler server.",
        "title": "Swagger Example API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/api/v1",
    "paths": {
        "/applications": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Find applications with optional filters for customer name and status, with pagination support.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Applications"
                ],
                "summary": "Find applications",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Customer Name",
                        "name": "customer_name",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "Pending",
                            "Approved",
                            "Rejected",
                            "Reborn"
                        ],
                        "type": "string",
                        "description": "Status",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Page size",
                        "name": "pageSize",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.PaginatedApplicationsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create a new default application for a customer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Applications"
                ],
                "summary": "Create a new default application",
                "parameters": [
                    {
                        "description": "Application info",
                        "name": "application",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.CreateApplicationRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/api.ApplicationResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/applications/pending": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a list of all pending default applications for approval",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Applications"
                ],
                "summary": "Get pending applications",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.ApplicationResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/applications/rebirth/apply": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Submit an application for rebirth for an approved default application",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Applications"
                ],
                "summary": "Apply for rebirth",
                "parameters": [
                    {
                        "description": "Rebirth apply info",
                        "name": "rebirth_apply",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.RebirthApplyRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/applications/rebirth/approve": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Approve a pending rebirth application",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Applications"
                ],
                "summary": "Approve a rebirth application",
                "parameters": [
                    {
                        "description": "Rebirth approve info",
                        "name": "rebirth_approve",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.RebirthApproveRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/applications/review/approve": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Approve a pending default application",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Applications"
                ],
                "summary": "Approve a default application",
                "parameters": [
                    {
                        "description": "Approval info",
                        "name": "approval",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.ApproveRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/applications/review/reject": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Reject a pending default application with a reason",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Applications"
                ],
                "summary": "Reject a default application",
                "parameters": [
                    {
                        "description": "Rejection info",
                        "name": "rejection",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.RejectRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "Login with username and password to get a token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "User login",
                "parameters": [
                    {
                        "description": "User login info",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.LoginResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/register": {
            "post": {
                "description": "Register a new user with username, password and role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "User registration",
                "parameters": [
                    {
                        "description": "User registration info",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/api.UserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/statistics/defaults/by-industry": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get default statistics by industry for a given year. Can include historical data.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Statistics"
                ],
                "summary": "Get default statistics by industry",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Year",
                        "name": "year",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "Include historical data",
                        "name": "include_historical",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.StatisticsResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/statistics/defaults/by-region": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get default statistics by region for a given year. Can include historical data.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Statistics"
                ],
                "summary": "Get default statistics by region",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Year",
                        "name": "year",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "Include historical data",
                        "name": "include_historical",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.StatisticsResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/statistics/rebirths/by-industry": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get rebirth statistics by industry for a given year. Can include historical data.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Statistics"
                ],
                "summary": "Get rebirth statistics by industry",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Year",
                        "name": "year",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "Include historical data",
                        "name": "include_historical",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.StatisticsResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/statistics/rebirths/by-region": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get rebirth statistics by region for a given year. Can include historical data.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Statistics"
                ],
                "summary": "Get rebirth statistics by region",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Year",
                        "name": "year",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "Include historical data",
                        "name": "include_historical",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.StatisticsResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api.ApplicationDetailResponse": {
            "type": "object",
            "properties": {
                "applicant_name": {
                    "type": "string"
                },
                "application_time": {
                    "type": "string"
                },
                "approval_time": {
                    "type": "string"
                },
                "approver_name": {
                    "type": "string"
                },
                "customer_name": {
                    "type": "string"
                },
                "default_reason": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "latest_ext_grade": {
                    "type": "string"
                },
                "rebirth_reason": {
                    "type": "string"
                },
                "severity": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "api.ApplicationResponse": {
            "type": "object",
            "properties": {
                "applicant_name": {
                    "description": "ApplicantID 是提交此申请的用户的 ID。\nApplicantID string `json:\"applicant_id\"`",
                    "type": "string"
                },
                "application_time": {
                    "description": "ApplicationTime 是申请被提交的时间。",
                    "type": "string"
                },
                "customer_name": {
                    "description": "CustomerName 是该申请关联的客户名称。",
                    "type": "string"
                },
                "id": {
                    "description": "ID 是违约申请的唯一标识符。",
                    "type": "string"
                },
                "severity": {
                    "description": "Severity 是违约事件的严重等级。",
                    "type": "string"
                },
                "status": {
                    "description": "Status 是申请的当前状态 (例如：\"Pending\")。",
                    "type": "string"
                }
            }
        },
        "api.ApproveRequest": {
            "type": "object",
            "required": [
                "application_id"
            ],
            "properties": {
                "application_id": {
                    "type": "string"
                }
            }
        },
        "api.CreateApplicationRequest": {
            "type": "object",
            "required": [
                "customer_name",
                "reason",
                "severity"
            ],
            "properties": {
                "customer_name": {
                    "description": "CustomerName 是申请所针对的客户名称。\n验证规则：必填 (required)。",
                    "type": "string"
                },
                "reason": {
                    "description": "Reason 是提交违约申请的主要原因。\n验证规则：必填 (required)。",
                    "type": "string"
                },
                "remarks": {
                    "description": "Remarks 是申请的附加备注信息 (可选字段)。",
                    "type": "string"
                },
                "severity": {
                    "description": "Severity 是违约事件的严重等级。\n验证规则：必填 (required)，且值必须是 \"High\", \"Medium\", \"Low\" 三者之一。",
                    "type": "string",
                    "enum": [
                        "High",
                        "Medium",
                        "Low"
                    ]
                }
            }
        },
        "api.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "api.LoginRequest": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "description": "Password 是用于登录的密码。\n验证规则：必填 (required)。",
                    "type": "string"
                },
                "username": {
                    "description": "Username 是用于登录的用户名。\n验证规则：必填 (required)。",
                    "type": "string"
                }
            }
        },
        "api.LoginResponse": {
            "type": "object",
            "properties": {
                "token": {
                    "description": "Token 是一个 JWT (JSON Web Token)，客户端后续需要用它来进行身份认证。",
                    "type": "string"
                }
            }
        },
        "api.PaginatedApplicationsResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.ApplicationDetailResponse"
                    }
                },
                "page": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "api.RebirthApplyRequest": {
            "type": "object",
            "required": [
                "application_id",
                "rebirth_reason"
            ],
            "properties": {
                "application_id": {
                    "type": "string"
                },
                "rebirth_reason": {
                    "description": "使用 oneof 验证，确保重生原因来自预设列表",
                    "type": "string",
                    "enum": [
                        "正常结算后解除",
                        "在其他金融机构违约解除，或外部评级显示为非违约级别",
                        "计提比例小于设置界限",
                        "连续 12 个月内按时支付本金和利息",
                        "客户的还款意愿和还款能力明显好转，已偿付各项逾期本金、逾期利息和其他费用（包括罚息等），且连续 12 个月内按时支付本金、利息",
                        "导致违约的关联集团内其他发生违约的客户已经违约重生，解除关联成员的违约设定"
                    ]
                }
            }
        },
        "api.RebirthApproveRequest": {
            "type": "object",
            "required": [
                "application_id"
            ],
            "properties": {
                "application_id": {
                    "type": "string"
                }
            }
        },
        "api.RegisterRequest": {
            "type": "object",
            "required": [
                "password",
                "role",
                "username"
            ],
            "properties": {
                "password": {
                    "description": "Password 是用户注册时设置的密码。\n验证规则：必填 (required)，最小长度为 6 个字符 (min=6)。",
                    "type": "string",
                    "minLength": 6
                },
                "role": {
                    "description": "Role 是用户注册时指定的角色。\n验证规则：必填 (required)，且值必须是 \"Applicant\" 或 \"Approver\" 两者之一 (oneof=Applicant Approver)。",
                    "type": "string",
                    "enum": [
                        "Applicant",
                        "Approver"
                    ]
                },
                "username": {
                    "description": "Username 是用户注册时期望的用户名。\n验证规则：必填 (required)，最小长度为 4 个字符 (min=4)。",
                    "type": "string",
                    "minLength": 4
                }
            }
        },
        "api.RejectRequest": {
            "type": "object",
            "required": [
                "application_id",
                "rejection_reason"
            ],
            "properties": {
                "application_id": {
                    "type": "string"
                },
                "rejection_reason": {
                    "type": "string"
                }
            }
        },
        "api.StatisticsResponse": {
            "type": "object",
            "properties": {
                "count": {
                    "description": "计数",
                    "type": "integer"
                },
                "dimension": {
                    "description": "维度名称 (例如 \"Technology\")",
                    "type": "string"
                },
                "growth_rate": {
                    "description": "同比增长率 (指针以表示可能无法计算)",
                    "type": "number"
                },
                "percentage": {
                    "description": "占比 (例如 0.25 代表 25%)",
                    "type": "number"
                }
            }
        },
        "api.SuccessResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "api.UserResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "ID 是用户的唯一标识符 (UUID 格式的字符串)。",
                    "type": "string"
                },
                "role": {
                    "description": "Role 是用户的角色。",
                    "type": "string"
                },
                "username": {
                    "description": "Username 是用户的名称。",
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}