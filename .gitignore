# ========================
# IDE / Editor Config
# ========================

# JetBrains/GoLand
.idea/


# ========================
# Binaries and Builds
# ========================
# Go build output (the executable file)
# 假设你的 main.go 在 cmd/server/ 下，编译后可能会在根目录生成 server.exe 或 server
*.exe
*.exe~
*.dll
*.so
*.dylib
server  # 假设编译后的可执行文件名是 server

# Test files
*.test


# ========================
# OS Generated Files
# ========================
# macOS
.DS_Store
.AppleDouble
.LSOverride

# Windows
Thumbs.db
ehthumbs.db
Desktop.ini


# ========================
# Configs & Environment
# ========================
# 忽略所有 .env 文件和本地配置文件
# 最佳实践是把 config.yaml 作为模板提交，但把包含真实密码的本地文件忽略
.env
.env.*
!.env.example
config.local.yaml
config.yaml
docker-compose.yml
# ========================
# Logs & Temp Files
# ========================
*.log
*.tmp
*.temp


# ========================
# Go Dependencies
# ========================
# 虽然 go.mod 和 go.sum 应该提交，但一些老的工具可能会产生 vendor 目录
vendor/
*.pgsql
*.sql

# If you prefer the allow list template instead of the deny list, see community template:
# https://github.com/github/gitignore/blob/main/community/Golang/Go.AllowList.gitignore
#
# Binaries for programs and plugins
*.exe
*.exe~
*.dll
*.so
*.dylib

# Test binary, built with `go test -c`
*.test

# Code coverage profiles and other test artifacts
*.out
coverage.*
*.coverprofile
profile.cov

# Dependency directories (remove the comment below to include it)
# vendor/

# Go workspace file
go.work
go.work.sum

# env file
.env

# Editor/IDE
# .idea/
# .vscode/

.vscode/*
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json
!.vscode/*.code-snippets
!*.code-workspace

# Built Visual Studio Code Extensions
*.vsix
